#! /bin/bash


# Carreguem el script network_api.sh com a una llibreria, per 
#	poder fer servir les seves funcions
source network_lib.sh

SLURM_ETC=/etc/slurm-llnl


ip=$1
mask=$2

# Instal.lem slurm-wlm
apt install slurm-wlm -y

mkdir -p "$SLURM_ETC"/cgroup
cp -p /usr/share/doc/slurmd/examples/cgroup.release_common "$SLURM_ETC"/cgroup/cgroup.release_common
ln -s "$SLURM_ETC"/cgroup/cgroup.release_common "$SLURM_ETC"/cgroup/release_devices
ln -s "$SLURM_ETC"/cgroup/cgroup.release_common "$SLURM_ETC"/cgroup/release_cpuset
ln -s "$SLURM_ETC"/cgroup/cgroup.release_common "$SLURM_ETC"/cgroup/release_freezer

echo "/dev/null 
/dev/urandom 
/dev/zero 
/dev/cpu/*/* 
/dev/pts/*" > "$SLURM_ETC"/allowed_devices.conf

memori=$(free --mebi | grep "Mem:" | awk '{print $2}')
cpus=$(lscpu | grep "^CPU(s):" | awk '{print $2}')
threads=$(lscpu | grep "^Thread(s)" | awk '{print $4}')
sockets=$(lscpu | grep "^Socket(s)" | awk '{print $2}')
cores=$(lscpu | grep "^Core(s)" | awk '{print $4}')
names=$(cat /etc/odroid_cluster.conf | grep "^HOSTS_NAME=" | cut -d= -f2)
max_time=$(cat /etc/odroid_cluster.conf | grep "^MAX_TIME=" | cut -d= -f2)
scheduler=$(cat /etc/odroid_cluster.conf | grep "^SCHEDULER=" | cut -d= -f2)
tracking=$(cat /etc/odroid_cluster.conf | grep "^TRACKING=" | cut -d= -f2)

echo "# slurm.conf file generated by configurator easy.html.
# Put this file on all nodes of your cluster. 
# See the slurm.conf man page for more information. 
# 
ControlMachine=master 
# 
#MailProg=/bin/mail 
MpiDefault=pmi2
#MpiParams=ports=#-# 
ProctrackType=proctrack/cgroup 
ReturnToService=1 
SlurmctldPidFile=/var/run/slurm-llnl/slurmctld.pid
#SlurmctldPort=6817 
SlurmdPidFile=/var/run/slurm-llnl/slurmd.pid
#SlurmdPort=6818
SlurmdSpoolDir=/var/spool/slurmd
SlurmUser=slurm
#SlurmdUser=root
StateSaveLocation=/var/spool/slurm
SwitchType=switch/none
TaskPlugin=${tracking}
#
#
# TIMERS 
#KillWait=30 
#MinJobAge=300 
#SlurmctldTimeout=120 
#SlurmdTimeout=300 
# 
# 
# SCHEDULING 
SchedulerType=${scheduler}
SelectType=select/cons_res
SelectTypeParameters=CR_CPU
# 
# 
# LOGGING AND ACCOUNTING 
AccountingStorageType=accounting_storage/none 
ClusterName=cluster 
#JobAcctGatherFrequency=30 
JobAcctGatherType=jobacct_gather/none 
#SlurmctldDebug=info 
SlurmctldLogFile=/var/log/slurm-llnl/slurmctld.log 
#SlurmdDebug=info 
SlurmdLogFile=/var/log/slurm-llnl/slurmd.log 
# 
# 
# COMPUTE NODES 
NodeName=${names}[1-2] CPUs=${cpus} RealMemory=${memori} Sockets=${sockets} CoresPerSocket=${cores} ThreadsPerCore=${threads} State=UNKNOWN 
PartitionName=main Nodes=${names}[1-2] Default=YES MaxTime=${max_time} State=UP" > "$SLURM_ETC"/slurm.conf

echo "CgroupAutomount=yes
CgroupReleaseAgentDir=\"${SLURM_ETC}/cgroup\"
ConstrainCores=yes 
TaskAffinity=yes 
ConstrainDevices=yes 
AllowedDevicesFile=\"${SLURM_ETC}/allowed_devices.conf\" 
ConstrainRAMSpace=no" > "$SLURM_ETC"/cgroup.conf


chown -R slurm: "$SLURM_ETC"

if [ $(cat /etc/exports | grep "$SLURM_ETC" | wc -l) -eq 0 ]; then
	echo "${SLURM_ETC} $(calculate_network_ip $ip $mask)$(mask_to_cidr $mask)(rw,no_root_squash,no_subtree_check)" >> /etc/exports
fi

exportfs -a

# Creem un nou directori dintre de /var/spool anomenat slurm per a que slurmctld pugui fer-lo servir
mkdir /var/spool/slurm
chown slurm: /var/spool/slurm

systemctl enable slurmctld
systemctl start slurmctld
